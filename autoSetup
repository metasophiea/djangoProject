#!/bin/bash

echo; echo -------- Installing Additional Tools --------; echo;
apt -y install openssh-server nano cron net-tools expect # ssh, nano, cron, ifconfig (and friends), expect (for scripted interaction)
/etc/init.d/ssh start

echo; echo -------- Installing Apache and Mod_WSGI --------; echo;
apt -y install apache2 libapache2-mod-wsgi-py3
# setup apache to use wsgi and connect to django
sed -i.bak '2i\
        Alias /static /website/static\
        <Directory /website/static>\
                Require all granted\
        </Directory>\
\
        <Directory /website/website>\
                <Files wsgi.py>\
                        Require all granted\
                </Files>\
        </Directory>\
\
        WSGIDaemonProcess website python-path=/website python-home=/website\
        WSGIProcessGroup website\
        WSGIScriptAlias / /website/website/wsgi.py\
' /etc/apache2/sites-available/000-default.conf

echo; echo -------- Installing Python and Pip --------; echo;
apt -y install python3 python3-pip # python, pip
pip3 install --upgrade pip
pip3 install psycopg2 # database connectivity

echo; echo -------- Installing PostgreSQL --------; echo;
apt-get install -y libpq-dev postgresql postgresql-contrib
/etc/init.d/postgresql start

echo; echo -------- Setting up a database and user in PostgreSQL --------; echo;
sudo -u postgres sh -c "\
    /usr/bin/expect << END
        spawn psql
        expect \"postgres=# \"
        send \"create database website;\r\"
        expect \"postgres=# \"
        send \"create user app with password 'password';\r\"     
        expect \"postgres=# \"
        send \"alter role app set client_encoding to 'utf8';\r\"
        expect \"postgres=# \"
        send \"alter role app set default_transaction_isolation to 'read committed';\r\"
        expect \"postgres=# \"
        send \"alter role app set timezone to 'UTC';\r\"
        expect \"postgres=# \"
        send \"grant all privileges on database website to app;\r\"
        expect \"postgres=# \"
        send \"\\q\r\"
END\
"
echo ""

echo; echo -------- Installing Django --------; echo;
pip3 install django

echo; echo -------- Setting up a Django project and loading website code --------; echo;
django-admin startproject website

# copy site code into website folder
cp -r /djangoProject/siteCode/* /website

# run the makemigrations function in django (probably useless)
python3 /website/manage.py makemigrations
# run the makemigrations function in relation to the 'newTwitter' app
python3 /website/manage.py makemigrations newTwitter
# tell django to set itself up in the database
python3 /website/manage.py migrate
# tell django to collect all of the static content into the directory location we configured
python3 /website/manage.py collectstatic

# add ip address to allowed hosts (attempts to find this automatically)
sed -i -e "s/ALLOWED_HOSTS = \[\]/ALLOWED_HOSTS = \['$(ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://')'\]/g" website/website/settings.py
# create the superuser 'root'
/usr/bin/expect << END
        spawn python3 website/manage.py createsuperuser
        expect "Username (leave blank to use 'root'): "
        send "\r"
        expect "Email address: "
        send "\r"
        expect "Password: "
        send "woodensword\r"
        expect "Password (again): "
        send "woodensword\r"
        expect "Superuser created successfully."
END

# echo; echo -------- Setting Up Cron Updater --------; echo;
# crontab -r
# crontab << END
# 21 4 * * * cd /djangoProject; ./update >> /websiteUpdateLog; cd /;
# END
# echo "Cron update task entered (every-day at 4:21am)"
# /etc/init.d/cron start

echo; echo -------- Starting Django Server --------; echo;
python3 /website/manage.py runserver 0.0.0.0:8080

# echo; echo -------- Starting Apache Server --------; echo;
# /etc/init.d/apache2 start
